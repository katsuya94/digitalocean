---
- name: taskd
  hosts: digitalocean
  become: true
  become_user: app
  vars:
    directory: /home/app/taskd
    docker_volume: "{{ directory }}:/var/taskd"
    docker_image: katsuya94/taskd:latest
    docker_run: "docker run -v {{ docker_volume }} {{ docker_image }}"
  tasks:
    - name: create taskd data directory
      file:
        path: "{{ directory }}"
        state: directory
      register: create_taskd_dir_result
    - name: initialize taskd data directory
      command: "{{ docker_run }} taskd init"
      when: create_taskd_dir_result.changed
    - name: create taskd pki directory
      file:
        path: "{{ directory }}/pki"
        state: directory
    - name: configure taskd
      lineinfile:
        path: "{{ directory }}//config"
        regexp: "^{{ item.key | regex_escape }}="
        line: "{{ item.key }}={{ item.value }}"
      with_dict:
        log: "-"
        server.cert: /var/taskd/pki/server.cert.pem
        server.key: /var/taskd/pki/server.key.pem
        server: "0.0.0.0:53589"
      become_user: root
    - name: copy pki files
      copy:
        src: "{{ ansible_host }}-{{ item }}"
        dest: "{{ directory }}/pki/{{ item }}"
      with_items:
        - server.key.pem
        - server.cert.pem
    - name: fetch organizations
      command: "ls -1 {{ directory }}/orgs"
      register: organizations_result
      become_user: root
      changed_when: no
    - name: add organization
      command: "{{ docker_run }} taskd add org Public"
      args:
        creates: "{{ directory }}/orgs/Public"
    - name: add user
      command: "{{ docker_run }} taskd add user Public kacchan"
      args:
        creates: "{{ directory }}/orgs/Public/*"
    - name: start taskd
      docker_container:
        name: taskd
        image: "{{ docker_image }}"
        volumes:
          - "{{ docker_volume }}"
        exposed:
          - "53589"
        ports:
          - "53589:53589"
